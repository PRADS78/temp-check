// THEME NEUTRAL-COLORS
$white-color: #ffffff;
$very-dark-grey: #57676c;
$dark-grey: #adb8b8;
$normal-grey: #d8dedf;
$light-grey: #e2e8e9;
$very-light-grey: #eef1f2;
$bg-grey: #eaeceb;
$app-button-height: 36;
$text-box-border-color: #b6b6b6;
$text-box-border-focus-color: #6a1ca6;
$text-box-text-color: #1b1b1b;
$text-box-label-color: #595959;
$text-box-label-focus-color: #732aab;
$error-color: #da3833;
$text-box-help-color: #787878;
$checkbox-border-color: #383838;
$checkbox-default-color: #121212;
$switch-path-color: #a6a6a6;
$switch-black-color: #080808;
$ash-bg-color: #f0f0f0;
$black-text-color: #191919;
$border-grey-color: #d3d3d3;
$border-ash-D-color: #dddddd;
$border-hover-color: #b3b3b3;
$clock-ash-color: #e4e4e4;
$input-ash-color: #b4b4b4;
$icon-ash-color: #595959;
$snack-bar-background-color:#2B2B2B;
$snack-bar-button-color:#52C8FF;
$snack-bar-button-outline-color:rgb(82 200 255 / 24%);
$snack-bar-button-hover-background-color:#52C8FF14;


// component css property colors
$checkbox-grey: rgb(0 0 0 / 35%);
$date-picker-time-color: rgb(0 0 0 / 65%);
$date-picker-grey-border: rgb(0 0 0 / 35%);
$checkbox-grey: rgb(0 0 0 / 35%);
$input-color: rgb(0 0 0 / 65%);
$grey-background: rgb(0 0 0 / 12%);
$grey-border: rgb(0 0 0 / 12%);
$grey-text: rgb(0 0 0 / 35%);
$grey-radio-button-border: rgb(0 0 0 / 35%);
$grey-radio-button-core: rgb(0 0 0 / 35%);
$radio-button-border-color: rgb(0 0 0 / 65%);
$input-color: rgb(0 0 0 / 65%);
$placeholder-color: rgb(0 0 0 / 30%);
$radio-button-border-color: rgb(0 0 0 / 65%);
$tab-label-hover-color: rgb(0 0 0 / 6%);
$tabs-disabled-scroll-button-color: rgb(0 0 0 / 35%);
$text-color: rgb(0 0 0 / 65%);
$switch-background-color: rgb(0 0 0 / 6%);
$switch-box-shadow: 0 4px 5px -1px rgb(0 0 0 / 8%);
$switch-disabled: rgb(0 0 0 / 12%);
$switch-disabled-sphere: rgb(0 0 0 / 35%);

//6a1da6

// $action-color: #33a356;
$action-color: #00b37d;
$cancellation-color: #c92434;
$warning-color: #f2ca30;
$action-hover-color: #faa359;
$cancellation-hover-color: #ffe0ff;
$disable-color: #b7b7b7;
$border-light-color: #c4c4c4;
$border-dark-color: #3c3c3c;
$lesson-planning-color-forecolor: #6e6ed4;
$lesson-planning-color-light: #999999;
$lesson-planning-color-dark: #a3a1d1;
$lesson-planning-color-hover: #d7d3eb;
$lesson-planning-color-light-bg: #dad7e9;
$lesson-planning-color-more-light-bg: #f5f4f9;
$lesson-planning-color-medium-bg: #d6d2eb;
$lesson-planning-color-dark-bg: #c3bddf;
$lesson-planning-color-text: #6e6eb4;

//new theme color variables start

$themeNeutral-1: #f8cf1c;
$themeNeutral-2: #ff900f;
$themeNeutral-3: #c92434;
$themeNeutral-4: #00b37d;
$themeNeutral-5: #000000;
$themeNeutral-6: #62717a;
$themeNeutral-7: #cbd0d3;
$themeNeutral-8: #efefef;
$themeNeutral-9: #f8f8f8;
$themeNeutral-10: #ee7815;
$analytics-1: #9d608a;
$analytics-2: #f7bd69;
$analytics-3: #0095c0;
$analytics-4: #475ea2;
$analytics-5: #ef8a60;
$analytics-6: #00aa74;
$analytics-7: #9fe042;
$analytics-8: #a388da;
$analytics-9: #d5d6c8;

// new color schemes END

// NEW COLORS, AS PART OF UI REVAMP
$dark-background-1: rgb(55 94 151);
$dark-background-2: rgb(49 169 184);
$dark-background-3: rgb(169 73 115);
$dark-background-4: rgb(105 83 112);
$dark-background-5: rgb(103 115 119);
$dark-background-5: rgb(103 115 119);
$overlay-1: $analytics-8;
$overlay-2: $analytics-3;
$overlay-3: $analytics-6;
$overlay-4: $analytics-2;
$overlay-5: $analytics-4;
$overlay-6: $analytics-1;
$program-overlay-colors: #e6b222 #f15b67 #30c8ca #86ab41 #0094da #7c51a1 #e07e27
  #7087c6;
$overlay-1-transparent: rgb(201 160 190 / 50%);
$overlay-2-transparent: rgb(90 133 168 / 50%);
$overlay-3-transparent: rgb(124 81 161 / 50%);
$overlay-4-transparent: rgb(219 170 155 / 50%);
$overlay-5-transparent: rgb(124 81 161 / 50%);
$overlay-6-transparent: rgb(241 91 103 / 50%);
$light-forecolor-1: white;
$light-background: #ebebeb;
$very-light-background: #f7f7f7;
$success: #3AB876;
$dark-forecolor-1: #2f96ea;

// NEW COLORS END HERE

$forecolor: black;
$textcolor: #424242;
$disabletextcolor: #aeaeae;
$required-icon-color: #f60d23;
$correction: #00bf7c;
$deletion: #ed1c24;
$deletion-light: #ff4f57;
$correction-light: #33f2af;

// THEME-BASED COLOR SETS (that constitute a theme)
// All the color values should make use of the variables defined below
$accent: "accent";

// Theme color sets definitions
//$disprz: ( "accent": #0072bc );
$accentDark: "accentDark";
$accentLight: "accentLight";
$accentMildLight: "accentMildLight";
$accentVeryLight: "accentVeryLight";
$accentVeryMildLight: "accentVeryMildLight";
$accentSuperLight: "accentSuperLight";
$gradientaccent12: "gradientaccent12";
$accentTranslucent: "accentTranslucent";
$accentHoverLight: "accentHoverLight";
$accentHoverGradient: "accentHoverGradient";
$accentFocusGradient: "accentFocusGradient";

// Theme color sets definitions
// old color #0072bc
// Theme color sets definitions
$disprz: ('accent': #0072bc  );

// Datastructure for autogenerating theme based classes
$themificationDataStructure: () !default !global;

//Default color, If theme provider not used
:root {
  --accent: #6A1CA6;
  --accentVeryLight: #9244ce;
  --accentLight: #7e30ba;
  --accentLight2: rgb(106 28 166 / 74%);
  --accentLight4: rgb(106 28 166 / 4%);
  --accentDark: #560892;
  --accentTranslucent: rgb(106 28 166 / 60%);
  --accentMildLight: rgb(106 28 166 / 12%);
  --accentVeryMildLight: rgb(106 28 166 / 6%);
  --accentHoverLight: rgb(106 28 166 / 8%);
  --accentHoverGradient: linear-gradient(0deg, rgb(255 255 255 / 8%), rgb(255 255 255 / 8%)), var(--accent);
  --accentFocusGradient: linear-gradient(0deg, rgb(255 255 255 / 12%), rgb(255 255 255 / 12%)), var(--accent);
}

// Mixin that complies themes from $theme variables and populates the theme scss for all themes.
@mixin themeColor($styleAttribute , $colorVariant, $prefix:() ) {
  /* Start - IE11 fallback code */
  $colorValue: map-get($disprz, "accent");

  #{$styleAttribute}: $colorValue $prefix;

  /* End - IE11 fallback code */

  @if ($colorVariant == "accentVeryLight") or
    ($colorVariant == "accentLight") or
    ($colorVariant == "accentDark") or
    ($colorVariant == "accentTranslucent") or
    ($colorVariant == "accentMildLight") or
    ($colorVariant == "accentVeryMildLight") or
    ($colorVariant == "accentSuperLight") or
    ($colorVariant == "accent") or
    ($colorVariant == "accentHoverLight") or
    ($colorVariant == "accentHoverGradient") or
    ($colorVariant == "accentFocusGradient")
  {
    $colorValue: var(--#{$colorVariant});
  } @else {
    $colorValue: $colorVariant;
  }

  #{$styleAttribute}: $colorValue $prefix;
}

// Mixin that adds the class selector and its property to collection that needs themification
// Call this mixin whereever the color of the class selector will change for every themes
@mixin themify($classSelector, $property, $colorVariable, $cssValueSuffix:"", $cssValuePrefix:"") {
  /* Start - IE11 fallback code */
  $colorValue: map-get($disprz, "accent");
  #{$classSelector} {
    #{$property} : #{unquote($cssValuePrefix) + $colorValue + unquote($cssValueSuffix)};
  }

  /* End - IE11 fallback code */

  $colorValue: var(--#{$colorVariable});
  #{$classSelector} {
    #{$property} : #{unquote($cssValuePrefix) + $colorValue + unquote($cssValueSuffix)};
  }
}

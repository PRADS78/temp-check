@use "../../Styles/Font.scss" as Fonts;
@use "../../Styles/ZIndex.module.scss" as zindex;

.container {
  display: flex;
  width: 100%;
  position: relative;
  align-items: center;
  overflow: hidden;

  .limitExceededTooltipIcon {
    width: 24px;
    height: 24px;
    align-self: center;
    margin-inline-start: 10px;

    svg {
      fill: hsl(0deg 0% 0% / 65%);
    }
  }

  .innerContainer {
    display: flex;
    align-items: center;
    height: 100%;
    min-height: 52px;
    column-gap: 4px;
    row-gap: 6px;
    flex-grow: 1;
    flex-wrap: wrap;
    padding: 6px 0;

    .border {
      height: 40px;
      width: 1px;
      background-color: rgb(0 0 0 / 24%);

      + .applyButton {
        margin-inline-start: 8px;
      }
    }

    .item {
      display: flex;
      height: 40px;
      background-color: white;
      border-radius: 8px;
      align-items: center;
      justify-content: center;
      padding: 0 12px;
      transition: background-color 0.2s ease-in-out;
      gap: 4px;

      &.removable {
        background-color: rgb(0 0 0 / 8%);
      }

      .mandatoryItem {
        color: var(--accent);
      }

      .warningIcon {
        svg {
          fill: #da3832;
          width: 20px;
          height: 20px;
        }
      }

      span {
        color: rgb(0 0 0 / 65%);
        @include Fonts.fontSemiboldNormal;
      }

      .tag {
        border-radius: 50%;
        height: 20px;
        width: 20px;
        padding: 0;
        line-height: 15px;
        display: flex;
        align-items: center;
        justify-content: center;

        span {
          @include Fonts.fontNormal;
        }
      }

      .downArrow {
        fill: hsl(0deg 0% 0% / 65%);
      }

      .closeIcon {
        svg {
          fill: black;
          height: 18px;
          width: 18px;
        }
      }

      &:hover,
      &:focus,
      &:active {
        cursor: pointer;
        /* stylelint-disable-next-line custom-property-pattern */
        background: var(--accentHoverLight);

        span {
          color: var(--accent);
        }

        .downArrow {
          fill: var(--accent);
        }
      }
    }
  }

  .localizedBanner {
    position: absolute;
    inset-inline: unset;
    inset-inline-end: 0;
    transition: transform 250ms ease-in, opacity 0ms ease-in 200ms;
    transform: translateX(500px);
    opacity: 0;
    pointer-events: none;
    z-index: zindex.get(zindex.$filter, "localized-banner");

    &.active {
      transform: translateX(0);
      transition: transform 250ms ease-out;
      pointer-events: auto;
      opacity: 1;
    }
  }
}
